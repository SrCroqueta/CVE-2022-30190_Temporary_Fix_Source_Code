# This script is made for automate the process of a temporary fix for the vuln CVE-2022-30190.
# Created and compile by @SrCroqueta_ .

# Yes, it could be baked better, but this has been designed for fast implement and with not
# much knowledge of programming, so sorry if it looks really nasty hehe :P.

import os, time, ctypes

key_name = 'ms-msdt_backup.reg'
directory_registry_key = 'HKEY_CLASSES_ROOT\ms-msdt'
registry_key_created_on = 'HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\ScriptedDiagnostics'
name_new_key = 'EnableDiagnostics'

def cls():
    os.system('cls||clear')

def isAdmin():
    try:
        is_admin = (os.getuid() == 0)
    except AttributeError:
        is_admin = ctypes.windll.shell32.IsUserAnAdmin() != 0
    return is_admin

def export_registry_key():
    print('/'*34 + ' TEMPORARY FIX FOR CVE-2022-30190 ' + '/'*34)
    print('='*102)
    print(f'\nExporting registry key {directory_registry_key} . . .')
    print('-'*102)

    time.sleep(2.5)

    os.system('cmd /c "reg export HKEY_CLASSES_ROOT\ms-msdt ms-msdt_backup.reg"')

    print(f'Registry key has been saved as "{key_name}".\nCheck the local directory where you run this script to locate the file.\n\nBE SURE IS ON THE SAVE DIRECTORY AS "recover_reg.py",\nyou will need it in the future when this vuln is fixed.\n')
    print('='*102+'\n'+'/'*102)

def delete_registry_key():
    print('='*102)
    print(f'\nDeleting registry key {directory_registry_key} . . .')
    print('-'*102)

    time.sleep(2.5)

    os.system('cmd /c "reg delete HKEY_CLASSES_ROOT\ms-msdt /f"')

    print(f'Registry key has been deleted.\n')
    print('='*102+'\n'+'/'*102)

def create_gpo():
    print('='*102)
    print(f'\nCreating registry key on "{registry_key_created_on}"\nto disable Windows Troubleshooter . . .')
    print('-'*102)

    time.sleep(2.5)

    os.system('cmd /c "reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\ScriptedDiagnostics" /v "EnableDiagnostics" /t REG_DWORD /d 0"')

    print(f'Registry key for Windows Troubleshooter has been created as "{name_new_key}" name.\n')
    print('='*102)
    print('/'*102)

def main():
    cls()

    if isAdmin():
        export_registry_key()
        delete_registry_key()
        create_gpo()

        input('\n                                    Press "Enter" to continue . . .')
        cls()

        print('/'*102)
        print('If you want to back to the old configuration, run the script "revert_changes.exe" as administrator.')
        print('/'*102)
        input('\n                                    Press "Enter" to continue . . .')
        cls()
    else:
        print('/'*102)
        print('                              -- You must run this as Administrator. --')
        print('/'*102)
        input('\n                                    Press "Enter" to continue . . .')
        cls()

if __name__ == "__main__":
    main()